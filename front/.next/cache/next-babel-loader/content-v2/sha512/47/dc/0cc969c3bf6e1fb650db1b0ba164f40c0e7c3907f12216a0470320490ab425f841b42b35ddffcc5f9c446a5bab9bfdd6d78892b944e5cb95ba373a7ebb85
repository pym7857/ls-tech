{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\pages\\\\hashtag.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../components/PostCard';\n\nvar Hashtag = function Hashtag(_ref) {\n  _s();\n\n  var tag = _ref.tag;\n  // getInitialProps로부터 전달받은 props \n  //console.log(tag);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: tag\n    });\n  }, []); //console.log('hashtag mainPosts: ', mainPosts);\n\n  return (\n    /*#__PURE__*/\n    // 해당 해시태그 게시물 모두 보여줌 \n    _jsxDEV(\"div\", {\n      children: mainPosts.map(function (c) {\n        return /*#__PURE__*/_jsxDEV(PostCard, {\n          post: c\n        }, +c.createdAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(Hashtag, \"TFMHDrjmtYOf8qInyyTWmKcACrU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Hashtag;\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('hashtag getInitialProps', context.query.tag);\n            return _context.abrupt(\"return\", {\n              tag: context.query.tag\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hashtag\");","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/pages/hashtag.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","state","post","mainPosts","type","data","map","c","createdAt","propTypes","string","isRequired","getInitialProps","context","console","log","query"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA;;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAAE;AAC7B;AACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAF2B,qBAGLC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHN;AAAA,MAGnBC,SAHmB,gBAGnBA,SAHmB;;AAK3BX,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAER,0BADC;AAEPS,MAAAA,IAAI,EAAEN;AAFC,KAAD,CAAR;AAID,GALQ,EAKN,EALM,CAAT,CAL2B,CAY3B;;AAEA;AAAA;AAAS;AACP;AAAA,gBACGI,SAAS,CAACG,GAAV,CAAc,UAAAC,CAAC;AAAA,4BACd,QAAC,QAAD;AAA6B,UAAA,IAAI,EAAEA;AAAnC,WAAe,CAACA,CAAC,CAACC,SAAlB;AAAA;AAAA;AAAA;AAAA,iBADc;AAAA,OAAf;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAOD,CArBD;;GAAMV,O;UAEaJ,W,EACKC,W;;;KAHlBG,O;AAuBNA,OAAO,CAACW,SAAR,GAAoB;AAClBV,EAAAA,GAAG,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AADJ,CAApB;;AAIAb,OAAO,CAACc,eAAR;AAAA,uEAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAcjB,GAArD;AADwB,6CAEjB;AAAEA,cAAAA,GAAG,EAAEc,OAAO,CAACG,KAAR,CAAcjB;AAArB,aAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst Hashtag = ({ tag }) => { // getInitialProps로부터 전달받은 props \r\n  //console.log(tag);\r\n  const dispatch = useDispatch();\r\n  const { mainPosts } = useSelector(state => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_HASHTAG_POSTS_REQUEST,\r\n      data: tag,\r\n    });\r\n  }, []);\r\n\r\n  //console.log('hashtag mainPosts: ', mainPosts);\r\n\r\n  return ( // 해당 해시태그 게시물 모두 보여줌 \r\n    <div>\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nHashtag.propTypes = {\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\nHashtag.getInitialProps = async (context) => {\r\n  console.log('hashtag getInitialProps', context.query.tag);\r\n  return { tag: context.query.tag }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \r\n                                     // 현재 파일: 7번째 줄 ! \r\n};\r\n\r\nexport default Hashtag;"]},"metadata":{},"sourceType":"module"}
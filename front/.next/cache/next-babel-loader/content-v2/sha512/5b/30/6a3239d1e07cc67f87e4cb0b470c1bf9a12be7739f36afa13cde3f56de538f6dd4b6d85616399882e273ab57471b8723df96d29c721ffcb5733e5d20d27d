{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\pages\\\\article.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Card } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport marked from 'marked';\nimport DOMPurify from \"dompurify\";\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\nimport ArticleCard from '../components/ArticleCard';\n\nvar Article = function Article(_ref) {\n  _s();\n\n  var id = _ref.id;\n  // getInitialProps로부터 전달받은 props \n  //console.log(id);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      article = _useSelector.article;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_ARTICLE_REQUEST,\n      data: id\n    });\n  }, []); //console.log('article: ', article);\n\n  var PreviewPanel = function PreviewPanel(props) {\n    // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      gfm: true,\n      breaks: true\n    });\n    console.log('props: ', props);\n    var output = DOMPurify.sanitize(marked(props.mdText));\n    console.log('output: ', output);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preview\",\n      dangerouslySetInnerHTML: {\n        __html: output\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return (\n    /*#__PURE__*/\n    // 해당 제목에 해당하는 게시글 보여줌 \n    _jsxDEV(\"div\", {\n      children: article.map(function (c) {\n        return /*#__PURE__*/_jsxDEV(ArticleCard, {\n          post: c\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(Article, \"XqGvSrpm9EaivVoZYDmhvGEMH9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Article;\nArticle.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nArticle.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('article getInitialProps', context.query.id);\n            return _context.abrupt(\"return\", {\n              id: context.query.id\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/pages/article.js"],"names":["React","useEffect","Card","PropTypes","useDispatch","useSelector","marked","DOMPurify","LOAD_ARTICLE_REQUEST","ArticleCard","Article","id","dispatch","state","post","article","type","data","PreviewPanel","props","setOptions","renderer","Renderer","gfm","breaks","console","log","output","sanitize","mdText","__html","map","c","propTypes","number","isRequired","getInitialProps","context","query"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;AAAE;AAC1B;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAFwB,qBAGJC,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHP;AAAA,MAGhBC,OAHgB,gBAGhBA,OAHgB;;AAKxBd,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,oBADD;AAELS,MAAAA,IAAI,EAAEN;AAFD,KAAD,CAAR;AAIH,GALQ,EAKN,EALM,CAAT,CALwB,CAYxB;;AAEA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAE;AAC9Bb,IAAAA,MAAM,CAACc,UAAP,CAAkB;AACdC,MAAAA,QAAQ,EAAE,IAAIf,MAAM,CAACgB,QAAX,EADI;AAEdC,MAAAA,GAAG,EAAE,IAFS;AAGdC,MAAAA,MAAM,EAAE;AAHM,KAAlB;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAvB;AACA,QAAMQ,MAAM,GAAGpB,SAAS,CAACqB,QAAV,CAAmBtB,MAAM,CAACa,KAAK,CAACU,MAAP,CAAzB,CAAf;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,MAAxB;AACA,wBACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,uBAAuB,EAAG;AAACG,QAAAA,MAAM,EAAEH;AAAT;AAF9B;AAAA;AAAA;AAAA;AAAA,aADJ;AAMH,GAfD;;AAiBF;AAAA;AAAS;AACP;AAAA,gBACKZ,OAAO,CAACgB,GAAR,CAAY,UAACC,CAAD,EAAO;AAChB,4BACI,QAAC,WAAD;AAAqB,UAAA,IAAI,EAAEA;AAA3B,WAAkBA,CAAlB;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADF;AASD,CAxCD;;GAAMtB,O;UAEeN,W,EACGC,W;;;KAHlBK,O;AA0CNA,OAAO,CAACuB,SAAR,GAAoB;AAChBtB,EAAAA,EAAE,EAAER,SAAS,CAAC+B,MAAV,CAAiBC;AADL,CAApB;;AAIAzB,OAAO,CAAC0B,eAAR;AAAA,uEAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACxBZ,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCW,OAAO,CAACC,KAAR,CAAc3B,EAArD;AADwB,6CAEjB;AAAEA,cAAAA,EAAE,EAAE0B,OAAO,CAACC,KAAR,CAAc3B;AAApB,aAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Card } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport marked from 'marked';\r\nimport DOMPurify from \"dompurify\";\r\n\r\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\r\nimport ArticleCard from '../components/ArticleCard';\r\n\r\nconst Article = ({ id }) => { // getInitialProps로부터 전달받은 props \r\n    //console.log(id);\r\n    const dispatch = useDispatch();\r\n    const { article } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_ARTICLE_REQUEST,\r\n            data: id,\r\n        });\r\n    }, []);\r\n\r\n    //console.log('article: ', article);\r\n\r\n    const PreviewPanel = (props) => { // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\r\n        marked.setOptions({\r\n            renderer: new marked.Renderer(),   \r\n            gfm: true,\r\n            breaks: true,\r\n        });\r\n        console.log('props: ', props);\r\n        const output = DOMPurify.sanitize(marked(props.mdText));\r\n        console.log('output: ', output);\r\n        return (\r\n            <div \r\n                id='preview' \r\n                dangerouslySetInnerHTML= {{__html: output}}\r\n            />\r\n        );\r\n    }\r\n\r\n  return ( // 해당 제목에 해당하는 게시글 보여줌 \r\n    <div>\r\n        {article.map((c) => {\r\n            return (\r\n                <ArticleCard key={c} post={c}/>\r\n            );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\n\r\nArticle.getInitialProps = async (context) => {\r\n  console.log('article getInitialProps', context.query.id);\r\n  return { id: context.query.id }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \r\n                                     // 현재 파일: 7번째 줄 ! \r\n};\r\n\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}
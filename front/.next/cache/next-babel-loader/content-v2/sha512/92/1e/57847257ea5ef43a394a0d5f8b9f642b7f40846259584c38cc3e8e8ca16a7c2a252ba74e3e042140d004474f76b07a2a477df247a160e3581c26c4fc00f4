{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\pages\\\\article.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { Card } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport marked from 'marked';\nimport DOMPurify from \"dompurify\";\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\n\nvar Article = function Article(_ref) {\n  _s();\n\n  var id = _ref.id;\n  // getInitialProps로부터 전달받은 props \n  //console.log(id);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      article = _useSelector.article;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_ARTICLE_REQUEST,\n      data: id\n    });\n  }, []);\n  console.log('article: ', article); // markdown 형식 -> 일반 글 형식 \n\n  var PreviewPanel = function PreviewPanel(props) {\n    // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      gfm: true,\n      breaks: true\n    });\n    var output = DOMPurify.sanitize(marked(props.mdText)); //console.log('output: ', output);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preview\",\n      dangerouslySetInnerHTML: {\n        __html: output\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return (\n    /*#__PURE__*/\n    // 해당 제목에 해당하는 게시글 보여줌 \n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: article.title,\n          bordered: false,\n          style: {\n            width: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Link, {\n              href: {\n                pathname: '/user',\n                query: {\n                  id: article.User.id\n                }\n              },\n              as: \"/user/\".concat(post.User.id),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: post.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 36\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, _this),\n            description: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PreviewPanel, {\n                mdText: 'ddd'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, _this)\n  );\n};\n\n_s(Article, \"XqGvSrpm9EaivVoZYDmhvGEMH9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Article;\nArticle.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nArticle.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('article getInitialProps', context.query.id);\n            return _context.abrupt(\"return\", {\n              id: context.query.id\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/pages/article.js"],"names":["React","useEffect","Link","Card","PropTypes","useDispatch","useSelector","marked","DOMPurify","LOAD_ARTICLE_REQUEST","Article","id","dispatch","state","post","article","type","data","console","log","PreviewPanel","props","setOptions","renderer","Renderer","gfm","breaks","output","sanitize","mdText","__html","background","padding","title","width","pathname","query","User","nickname","propTypes","number","isRequired","getInitialProps","context"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport Link from 'next/link';\r\nimport { Card } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport marked from 'marked';\r\nimport DOMPurify from \"dompurify\";\r\n\r\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\r\n\r\nconst Article = ({ id }) => { // getInitialProps로부터 전달받은 props \r\n    //console.log(id);\r\n    const dispatch = useDispatch();\r\n    const { article } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_ARTICLE_REQUEST,\r\n            data: id,\r\n        });\r\n    }, []);\r\n\r\n    console.log('article: ', article);\r\n\r\n    // markdown 형식 -> 일반 글 형식 \r\n    const PreviewPanel = (props) => { // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\r\n        marked.setOptions({\r\n            renderer: new marked.Renderer(),   \r\n            gfm: true,\r\n            breaks: true,\r\n        });\r\n\r\n        const output = DOMPurify.sanitize(marked(props.mdText));\r\n        //console.log('output: ', output);\r\n        return (\r\n            <div \r\n                id='preview' \r\n                dangerouslySetInnerHTML= {{__html: output}}\r\n            />\r\n        );\r\n    }\r\n\r\n    return ( // 해당 제목에 해당하는 게시글 보여줌 \r\n        <div>\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Card title={article.title} bordered={false} style={{ width: 300 }}>\r\n                    <Card.Meta\r\n                        avatar={(\r\n                            <Link href={{ pathname: '/user', query: { id: article.User.id } }} as={`/user/${post.User.id}`}>\r\n                                <a><Avatar>{post.User.nickname[0]}</Avatar></a>\r\n                            </Link>\r\n                        )}\r\n                        description={(\r\n                            <div>\r\n                                <PreviewPanel mdText={'ddd'}/>\r\n                            </div>\r\n                        )}\r\n                    >\r\n                    </Card.Meta>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nArticle.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\n\r\nArticle.getInitialProps = async (context) => {\r\n  console.log('article getInitialProps', context.query.id);\r\n  return { id: context.query.id }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \r\n                                     // 현재 파일: 7번째 줄 ! \r\n};\r\n\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}
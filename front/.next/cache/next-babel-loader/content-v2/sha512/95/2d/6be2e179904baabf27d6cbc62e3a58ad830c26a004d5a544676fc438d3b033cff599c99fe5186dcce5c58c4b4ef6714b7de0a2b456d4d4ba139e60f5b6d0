{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\components\\\\ArticleCard.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes, { nominalTypeHack } from 'prop-types';\nimport { Form, Input, Icon, Card, Avatar, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport marked from 'marked';\nimport DOMPurify from \"dompurify\";\n\nconst ArticleCard = ({\n  article\n}) => {\n  const dispatch = useDispatch(); // markdown 형식 -> 일반 글 형식 \n\n  const PreviewPanel = props => {\n    // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      gfm: true,\n      breaks: true\n    });\n    const output = DOMPurify.sanitize(marked(props.mdText)); //console.log('output: ', output);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preview\",\n      dangerouslySetInnerHTML: {\n        __html: output\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  console.log('(article card) article:', article);\n  return (\n    /*#__PURE__*/\n    // 해당 제목에 해당하는 게시글 보여줌 \n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: article.title,\n          bordered: false,\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            description: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(PreviewPanel, {\n                mdText: article.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this)\n        }, +article.createdAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  );\n};\n\nArticleCard.propTypes = {\n  article: PropTypes.shape({\n    // shape: 객체 상태 \n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default ArticleCard;","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/components/ArticleCard.js"],"names":["React","useCallback","useEffect","useState","Link","PropTypes","nominalTypeHack","Form","Input","Icon","Card","Avatar","Button","useDispatch","useSelector","marked","DOMPurify","ArticleCard","article","dispatch","PreviewPanel","props","setOptions","renderer","Renderer","gfm","breaks","output","sanitize","mdText","__html","console","log","background","padding","title","content","createdAt","propTypes","shape","User","object","string"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,IAAoBC,eAApB,QAA2C,YAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0CC,MAA1C,QAAwD,MAAxD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CADiC,CAGjC;;AACA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAAE;AAC9BN,IAAAA,MAAM,CAACO,UAAP,CAAkB;AACdC,MAAAA,QAAQ,EAAE,IAAIR,MAAM,CAACS,QAAX,EADI;AAEdC,MAAAA,GAAG,EAAE,IAFS;AAGdC,MAAAA,MAAM,EAAE;AAHM,KAAlB;AAMA,UAAMC,MAAM,GAAGX,SAAS,CAACY,QAAV,CAAmBb,MAAM,CAACM,KAAK,CAACQ,MAAP,CAAzB,CAAf,CAP4B,CAQ5B;;AACA,wBACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,uBAAuB,EAAG;AAACC,QAAAA,MAAM,EAAEH;AAAT;AAF9B;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH,GAfD;;AAiBAI,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCd,OAAvC;AAEA;AAAA;AAAS;AACL;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,UAAU,EAAE,SAAd;AAAyBC,UAAAA,OAAO,EAAE;AAAlC,SAAZ;AAAA,+BACI,QAAC,IAAD;AAEI,UAAA,KAAK,EAAEhB,OAAO,CAACiB,KAFnB;AAGI,UAAA,QAAQ,EAAE,KAHd;AAAA,iCAKI,QAAC,IAAD,CAAM,IAAN;AACI,YAAA,WAAW,eACP;AAAA,qCACI,QAAC,YAAD;AAAc,gBAAA,MAAM,EAAEjB,OAAO,CAACkB;AAA9B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AALJ,WACS,CAAClB,OAAO,CAACmB,SADlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAoBH,CA3CD;;AA6CApB,WAAW,CAACqB,SAAZ,GAAwB;AACpBpB,EAAAA,OAAO,EAAEb,SAAS,CAACkC,KAAV,CAAgB;AAAE;AACvBC,IAAAA,IAAI,EAAEnC,SAAS,CAACoC,MADK;AAErBL,IAAAA,OAAO,EAAE/B,SAAS,CAACqC,MAFE;AAGrBL,IAAAA,SAAS,EAAEhC,SAAS,CAACoC;AAHA,GAAhB;AADW,CAAxB;AAQA,eAAexB,WAAf","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes, { nominalTypeHack } from 'prop-types';\r\nimport { Form, Input, Icon, Card, Avatar, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport marked from 'marked';\r\nimport DOMPurify from \"dompurify\";\r\n\r\nconst ArticleCard = ({ article }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    // markdown 형식 -> 일반 글 형식 \r\n    const PreviewPanel = (props) => { // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\r\n        marked.setOptions({\r\n            renderer: new marked.Renderer(),   \r\n            gfm: true,\r\n            breaks: true,\r\n        });\r\n\r\n        const output = DOMPurify.sanitize(marked(props.mdText));\r\n        //console.log('output: ', output);\r\n        return (\r\n            <div \r\n                id='preview' \r\n                dangerouslySetInnerHTML= {{__html: output}}\r\n            />\r\n        );\r\n    }\r\n\r\n    console.log('(article card) article:', article);\r\n\r\n    return ( // 해당 제목에 해당하는 게시글 보여줌 \r\n        <div>\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Card \r\n                    key={+article.createdAt}\r\n                    title={article.title} \r\n                    bordered={false} \r\n                >\r\n                    <Card.Meta\r\n                        description={(\r\n                            <div>\r\n                                <PreviewPanel mdText={article.content}/>\r\n                            </div>\r\n                        )}\r\n                    >\r\n                    </Card.Meta>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nArticleCard.propTypes = {\r\n    article: PropTypes.shape({ // shape: 객체 상태 \r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    }),\r\n};\r\n\r\nexport default ArticleCard;"]},"metadata":{},"sourceType":"module"}
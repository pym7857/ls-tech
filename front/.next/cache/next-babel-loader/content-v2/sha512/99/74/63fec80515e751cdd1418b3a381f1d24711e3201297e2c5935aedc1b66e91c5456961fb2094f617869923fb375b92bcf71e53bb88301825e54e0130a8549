{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\pages\\\\article.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\nimport ArticleCard from '../components/ArticleCard';\n\nvar Article = function Article(_ref) {\n  _s();\n\n  var id = _ref.id;\n  // getInitialProps로부터 전달받은 props \n  //console.log(id);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      article = _useSelector.article;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_ARTICLE_REQUEST,\n      data: id\n    });\n  }, []); //console.log('(pages)article: ', article);\n\n  return (\n    /*#__PURE__*/\n    // 해당 제목에 해당하는 게시글 보여줌 \n    _jsxDEV(\"div\", {\n      children: article.map(function (c) {\n        return /*#__PURE__*/_jsxDEV(ArticleCard, {\n          article: c\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, _this)\n  );\n};\n\n_s(Article, \"XqGvSrpm9EaivVoZYDmhvGEMH9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Article;\nArticle.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nArticle.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('article getInitialProps', context.query.id);\n            return _context.abrupt(\"return\", {\n              id: context.query.id\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/pages/article.js"],"names":["React","useEffect","useCallback","PropTypes","useDispatch","useSelector","LOAD_ARTICLE_REQUEST","ArticleCard","Article","id","dispatch","state","post","article","type","data","map","c","propTypes","number","isRequired","getInitialProps","context","console","log","query"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,oBAAT,QAAqC,kBAArC;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;AAAE;AAC1B;AACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAFwB,qBAGJC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHP;AAAA,MAGhBC,OAHgB,gBAGhBA,OAHgB;;AAKxBZ,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAER,oBADD;AAELS,MAAAA,IAAI,EAAEN;AAFD,KAAD,CAAR;AAIH,GALQ,EAKN,EALM,CAAT,CALwB,CAYxB;;AAEA;AAAA;AAAS;AACL;AAAA,gBACKI,OAAO,CAACG,GAAR,CAAY,UAACC,CAAD,EAAO;AAChB,4BACI,QAAC,WAAD;AAAqB,UAAA,OAAO,EAAEA;AAA9B,WAAkBA,CAAlB;AAAA;AAAA;AAAA;AAAA,iBADJ;AAGH,OAJA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AASH,CAvBD;;GAAMT,O;UAEeJ,W,EACGC,W;;;KAHlBG,O;AAyBNA,OAAO,CAACU,SAAR,GAAoB;AAChBT,EAAAA,EAAE,EAAEN,SAAS,CAACgB,MAAV,CAAiBC;AADL,CAApB;;AAIAZ,OAAO,CAACa,eAAR;AAAA,uEAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,OAAO,CAACG,KAAR,CAAchB,EAArD;AADwB,6CAEjB;AAAEA,cAAAA,EAAE,EAAEa,OAAO,CAACG,KAAR,CAAchB;AAApB,aAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeD,OAAf","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\r\nimport ArticleCard from '../components/ArticleCard';\r\n\r\nconst Article = ({ id }) => { // getInitialProps로부터 전달받은 props \r\n    //console.log(id);\r\n    const dispatch = useDispatch();\r\n    const { article } = useSelector(state => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_ARTICLE_REQUEST,\r\n            data: id,\r\n        });\r\n    }, []);\r\n\r\n    //console.log('(pages)article: ', article);\r\n\r\n    return ( // 해당 제목에 해당하는 게시글 보여줌 \r\n        <div>\r\n            {article.map((c) => {\r\n                return (\r\n                    <ArticleCard key={c} article={c}/>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nArticle.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\n\r\nArticle.getInitialProps = async (context) => {\r\n  console.log('article getInitialProps', context.query.id);\r\n  return { id: context.query.id }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \r\n                                     // 현재 파일: 7번째 줄 ! \r\n};\r\n\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}
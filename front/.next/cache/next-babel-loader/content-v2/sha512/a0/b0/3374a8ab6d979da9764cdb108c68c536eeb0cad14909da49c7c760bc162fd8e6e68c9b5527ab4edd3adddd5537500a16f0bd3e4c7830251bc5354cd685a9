{"ast":null,"code":"import _toConsumableArray from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var initialState = {\n  isLoggingOut: false,\n  // 로그아웃 시도중\n  isLoggingIn: false,\n  // 로그인 시도중\n  logInErrorReason: '',\n  // 로그인 실패 사유\n  me: null,\n  // 내 정보\n  userInfo: null,\n  // 남의 정보\n  isEditingNickname: false,\n  // 이름 변경 중\n  editNicknameErrorReason: '' // 이름 변경 실패 사유\n\n}; // 액션 이름\n\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST';\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\nexport var EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport var EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport var EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME'; // reducer: action에 따라 state바꾸는 역할 \n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          // 내 정보(me) 일때\n          return _objectSpread(_objectSpread({}, state), {}, {\n            me: action.data\n          });\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          userInfo: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          me: _objectSpread(_objectSpread({}, state.me), {}, {\n            Posts: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Posts))\n          })\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/reducers/user.js"],"names":["initialState","isLoggingOut","isLoggingIn","logInErrorReason","me","userInfo","isEditingNickname","editNicknameErrorReason","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","reducer","state","action","type","data","isLoading","error","Posts","id"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,YAAY,GAAG;AACxBC,EAAAA,YAAY,EAAE,KADU;AACH;AACrBC,EAAAA,WAAW,EAAE,KAFW;AAEJ;AACpBC,EAAAA,gBAAgB,EAAE,EAHM;AAGF;AAEtBC,EAAAA,EAAE,EAAE,IALoB;AAKd;AACVC,EAAAA,QAAQ,EAAE,IANc;AAMR;AAEhBC,EAAAA,iBAAiB,EAAE,KARK;AAQE;AAC1BC,EAAAA,uBAAuB,EAAE,EATD,CASK;;AATL,CAArB,C,CAYP;;AACA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,IAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,cAAc,GAAG,gBAAvB,C,CAEP;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBtB,YAAyB;AAAA,MAAXuB,MAAW;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,cAAL;AAAqB;AACnB,+CACKc,KADL;AAEEpB,UAAAA,WAAW,EAAE,IAFf;AAGEC,UAAAA,gBAAgB,EAAE;AAHpB;AAKD;;AACD,SAAKM,cAAL;AAAqB;AACnB,+CACKa,KADL;AAEEpB,UAAAA,WAAW,EAAE,KAFf;AAGEE,UAAAA,EAAE,EAAEmB,MAAM,CAACE,IAHb;AAIEC,UAAAA,SAAS,EAAE;AAJb;AAMD;;AACD,SAAKhB,cAAL;AAAqB;AACnB,+CACKY,KADL;AAEEpB,UAAAA,WAAW,EAAE,KAFf;AAGEC,UAAAA,gBAAgB,EAAEoB,MAAM,CAACI,KAH3B;AAIEvB,UAAAA,EAAE,EAAE;AAJN;AAMD;;AACD,SAAKU,eAAL;AAAsB;AACpB,+CACKQ,KADL;AAEErB,UAAAA,YAAY,EAAE;AAFhB;AAID;;AACD,SAAKc,eAAL;AAAsB;AACpB,+CACKO,KADL;AAEErB,UAAAA,YAAY,EAAE,KAFhB;AAGEG,UAAAA,EAAE,EAAE;AAHN;AAKD;;AACD,SAAKO,iBAAL;AAAwB;AACtB,iCACKW,KADL;AAGD;;AACD,SAAKV,iBAAL;AAAwB;AACtB,YAAIW,MAAM,CAACnB,EAAX,EAAe;AAAE;AACf,iDACKkB,KADL;AAEElB,YAAAA,EAAE,EAAEmB,MAAM,CAACE;AAFb;AAID;;AACD,+CACKH,KADL;AAEEjB,UAAAA,QAAQ,EAAEkB,MAAM,CAACE;AAFnB;AAID;;AACD,SAAKZ,iBAAL;AAAwB;AACtB,iCACKS,KADL;AAGD;;AACD,SAAKF,cAAL;AAAqB;AACnB,+CACKE,KADL;AAEElB,UAAAA,EAAE,kCACGkB,KAAK,CAAClB,EADT;AAEAwB,YAAAA,KAAK,GAAG;AAAEC,cAAAA,EAAE,EAAEN,MAAM,CAACE;AAAb,aAAH,4BAA2BH,KAAK,CAAClB,EAAN,CAASwB,KAApC;AAFL;AAFJ;AAOD;;AACD;AAAS;AACL,iCACON,KADP;AAGH;AAxEL;AA0EH,CA3ED;;AA6EA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    isLoggingOut: false, // 로그아웃 시도중\r\n    isLoggingIn: false, // 로그인 시도중\r\n    logInErrorReason: '', // 로그인 실패 사유\r\n    \r\n    me: null, // 내 정보\r\n    userInfo: null, // 남의 정보\r\n\r\n    isEditingNickname: false, // 이름 변경 중\r\n    editNicknameErrorReason: '', // 이름 변경 실패 사유\r\n};\r\n\r\n// 액션 이름\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; \r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'; \r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'; \r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\n\r\n// reducer: action에 따라 state바꾸는 역할 \r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST: {\r\n          return {\r\n            ...state,\r\n            isLoggingIn: true,\r\n            logInErrorReason: '',\r\n          };\r\n        }\r\n        case LOG_IN_SUCCESS: {\r\n          return {\r\n            ...state,\r\n            isLoggingIn: false,\r\n            me: action.data,\r\n            isLoading: false,\r\n          };\r\n        }\r\n        case LOG_IN_FAILURE: {\r\n          return {\r\n            ...state,\r\n            isLoggingIn: false,\r\n            logInErrorReason: action.error,\r\n            me: null,\r\n          };\r\n        }\r\n        case LOG_OUT_REQUEST: {\r\n          return {\r\n            ...state,\r\n            isLoggingOut: true,\r\n          };\r\n        }\r\n        case LOG_OUT_SUCCESS: {\r\n          return {\r\n            ...state,\r\n            isLoggingOut: false,\r\n            me: null,\r\n          };\r\n        }\r\n        case LOAD_USER_REQUEST: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case LOAD_USER_SUCCESS: {\r\n          if (action.me) { // 내 정보(me) 일때\r\n            return {\r\n              ...state,\r\n              me: action.data,\r\n            };\r\n          }\r\n          return { // 남의 정보(userInfo) 일때 \r\n            ...state, \r\n            userInfo: action.data, \r\n          };\r\n        }\r\n        case LOAD_USER_FAILURE: {\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n        case ADD_POST_TO_ME: {\r\n          return {\r\n            ...state,\r\n            me: {\r\n              ...state.me,\r\n              Posts: [{ id: action.data }, ...state.me.Posts],\r\n            },\r\n          };\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}
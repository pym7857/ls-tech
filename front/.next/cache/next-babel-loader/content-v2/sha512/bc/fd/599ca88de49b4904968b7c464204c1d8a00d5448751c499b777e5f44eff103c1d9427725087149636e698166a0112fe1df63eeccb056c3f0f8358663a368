{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\YOUNG\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\pages\\\\user.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport PostCard from '../components/PostCard';\n\nconst User = ({\n  id\n}) => {\n  // getInitialProps로부터 전달받은 props \n  const dispatch = useDispatch();\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  const {\n    userInfo\n  } = useSelector(state => state.user); // me: 내 정보, userInfo: 남의 정보 \n\n  useEffect(() => {\n    dispatch({\n      // 남의 정보 \n      type: LOAD_USER_REQUEST,\n      data: id\n    });\n    dispatch({\n      // 남의 게시글 \n      type: LOAD_USER_POSTS_REQUEST,\n      data: id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [userInfo ? /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uC9F9\\uC9F9\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), userInfo.Posts]\n      }, \"twit\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: userInfo.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 23\n        }, this),\n        title: userInfo.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this) : null, mainPosts.map(c => /*#__PURE__*/_jsxDEV(PostCard, {\n      post: c\n    }, +c.createdAt, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nUser.getInitialProps = async context => {\n  console.log('user getInitialProps', context.query.id);\n  return {\n    id: parseInt(context.query.id, 10)\n  }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \n  // 현재 파일: 9번째 줄 ! \n};\n\nexport default User;","map":{"version":3,"sources":["C:/Users/YOUNG/Documents/GitHub/ls-tech/front/pages/user.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Avatar","Card","LOAD_USER_POSTS_REQUEST","LOAD_USER_REQUEST","PostCard","User","id","dispatch","mainPosts","state","post","userInfo","user","type","data","Posts","nickname","map","c","createdAt","propTypes","number","isRequired","getInitialProps","context","console","log","query","parseInt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,uBAAT,QAAwC,kBAAxC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAY;AAAE;AACzB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAgBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAjC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAhC,CAHuB,CAGgC;;AAEvDhB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,QAAQ,CAAC;AAAE;AACTM,MAAAA,IAAI,EAAEV,iBADC;AAEPW,MAAAA,IAAI,EAAER;AAFC,KAAD,CAAR;AAIAC,IAAAA,QAAQ,CAAC;AAAE;AACTM,MAAAA,IAAI,EAAEX,uBADC;AAEPY,MAAAA,IAAI,EAAER;AAFC,KAAD,CAAR;AAID,GATQ,EASN,EATM,CAAT;AAUA,sBACE;AAAA,eACGK,QAAQ,gBAEL,QAAC,IAAD;AACE,MAAA,OAAO,EAAE,cACP;AAAA,gDAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGA,QAAQ,CAACI,KAHZ;AAAA,SAAS,MAAT;AAAA;AAAA;AAAA;AAAA,cADO,CADX;AAAA,6BASE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASJ,QAAQ,CAACK,QAAT,CAAkB,CAAlB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADV;AAEE,QAAA,KAAK,EAAEL,QAAQ,CAACK;AAFlB;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAFK,GAkBP,IAnBJ,EAoBGR,SAAS,CAACS,GAAV,CAAcC,CAAC,iBACd,QAAC,QAAD;AAA6B,MAAA,IAAI,EAAEA;AAAnC,OAAe,CAACA,CAAC,CAACC,SAAlB;AAAA;AAAA;AAAA;AAAA,YADD,CApBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAzCD;;AA2CAd,IAAI,CAACe,SAAL,GAAiB;AACfd,EAAAA,EAAE,EAAET,SAAS,CAACwB,MAAV,CAAiBC;AADN,CAAjB;;AAIAjB,IAAI,CAACkB,eAAL,GAAuB,MAAOC,OAAP,IAAmB;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,OAAO,CAACG,KAAR,CAAcrB,EAAlD;AACA,SAAO;AAAEA,IAAAA,EAAE,EAAEsB,QAAQ,CAACJ,OAAO,CAACG,KAAR,CAAcrB,EAAf,EAAmB,EAAnB;AAAd,GAAP,CAFwC,CAEO;AACA;AAChD,CAJD;;AAMA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, Card } from 'antd';\r\nimport { LOAD_USER_POSTS_REQUEST } from '../reducers/post';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport PostCard from '../components/PostCard';\r\n\r\nconst User = ({ id }) => { // getInitialProps로부터 전달받은 props \r\n  const dispatch = useDispatch();\r\n  const { mainPosts } = useSelector(state => state.post);\r\n  const { userInfo } = useSelector(state => state.user); // me: 내 정보, userInfo: 남의 정보 \r\n\r\n  useEffect(() => {\r\n    dispatch({ // 남의 정보 \r\n      type: LOAD_USER_REQUEST,\r\n      data: id,\r\n    });\r\n    dispatch({ // 남의 게시글 \r\n      type: LOAD_USER_POSTS_REQUEST,\r\n      data: id,\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {userInfo\r\n        ? (\r\n          <Card\r\n            actions={[\r\n              <div key=\"twit\">\r\n                짹짹\r\n                <br />\r\n                {userInfo.Posts}\r\n              </div>,\r\n            ]}\r\n          >\r\n            <Card.Meta\r\n              avatar={<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n              title={userInfo.nickname}\r\n            />\r\n          </Card>\r\n        )\r\n        : \r\n        null }\r\n      {mainPosts.map(c => (\r\n        <PostCard key={+c.createdAt} post={c} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nUser.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nUser.getInitialProps = async (context) => {\r\n  console.log('user getInitialProps', context.query.id);\r\n  return { id: parseInt(context.query.id, 10) }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \r\n                                                 // 현재 파일: 9번째 줄 ! \r\n};\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}
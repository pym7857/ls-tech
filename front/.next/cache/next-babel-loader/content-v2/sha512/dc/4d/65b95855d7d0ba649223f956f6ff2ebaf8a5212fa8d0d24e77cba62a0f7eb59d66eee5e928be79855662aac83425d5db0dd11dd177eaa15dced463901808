{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\components\\\\ArticleCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Link from 'next/link';\nimport PropTypes, { nominalTypeHack } from 'prop-types';\nimport { Form, Input, Icon, Card, Avatar, Button } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport marked from 'marked';\nimport DOMPurify from \"dompurify\";\n\nvar ArticleCard = function ArticleCard(_ref) {\n  _s();\n\n  var article = _ref.article;\n  var dispatch = useDispatch(); // markdown 형식 -> 일반 글 형식 \n\n  var PreviewPanel = function PreviewPanel(props) {\n    // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\n    marked.setOptions({\n      renderer: new marked.Renderer(),\n      gfm: true,\n      breaks: true\n    });\n    var output = DOMPurify.sanitize(marked(props.mdText)); //console.log('output: ', output);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preview\",\n      dangerouslySetInnerHTML: {\n        __html: output\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this);\n  };\n\n  console.log('(article card) article:', article);\n  return (\n    /*#__PURE__*/\n    // 해당 제목에 해당하는 게시글 보여줌 \n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: article.title,\n          bordered: false,\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Link, {\n              href: {\n                pathname: '/user',\n                query: {\n                  id: article.User.id\n                }\n              },\n              as: \"/user/\".concat(article.User.id),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: article.User.nickname[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 36\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, _this),\n            title: article.User.nickname,\n            description: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(PreviewPanel, {\n                  mdText: article.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 37\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, _this), article.content.split(/(#[^\\s]+)/g).map(function (v) {\n                // 해시태그인 애들은 Link로 감싸준다 \n                if (v.match(/(#[\\S]+)/)) {\n                  // ex) #사과<li>\n                  //console.log(v.split('<')[0].slice(1));\n                  return /*#__PURE__*/_jsxDEV(Link, {\n                    href: {\n                      pathname: '/hashtag',\n                      query: {\n                        tag: v.split('<')[0].slice(1)\n                      }\n                    },\n                    as: \"/hashtag/\".concat(v.split('<')[0].slice(1)),\n                    children: /*#__PURE__*/_jsxDEV(\"a\", {\n                      style: {\n                        color: '#3f729b'\n                      },\n                      children: [\"#\", v.split('<')[0].slice(1), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 49\n                    }, _this)\n                  }, v, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 45\n                  }, _this);\n                } //return v; // 해시태그 아닌애들은 그냥 문자열 리턴 \n\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, _this)\n        }, +article.createdAt, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, _this)\n  );\n};\n\n_s(ArticleCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ArticleCard;\nArticleCard.propTypes = {\n  article: PropTypes.shape({\n    // shape: 객체 상태 \n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object\n  })\n};\nexport default ArticleCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleCard\");","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/components/ArticleCard.js"],"names":["React","useCallback","useEffect","useState","Link","PropTypes","nominalTypeHack","Form","Input","Icon","Card","Avatar","Button","useDispatch","useSelector","marked","DOMPurify","ArticleCard","article","dispatch","PreviewPanel","props","setOptions","renderer","Renderer","gfm","breaks","output","sanitize","mdText","__html","console","log","background","padding","title","pathname","query","id","User","nickname","content","split","map","v","match","tag","slice","color","createdAt","propTypes","shape","object","string"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport Link from 'next/link';\r\nimport PropTypes, { nominalTypeHack } from 'prop-types';\r\nimport { Form, Input, Icon, Card, Avatar, Button } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport marked from 'marked';\r\nimport DOMPurify from \"dompurify\";\r\n\r\nconst ArticleCard = ({ article }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    // markdown 형식 -> 일반 글 형식 \r\n    const PreviewPanel = (props) => { // post.content   ex) <p>해시태그도 써볼까</p><ul><li>#md성공 #md</li><li>될까?</li></ul>\r\n        marked.setOptions({\r\n            renderer: new marked.Renderer(),   \r\n            gfm: true,\r\n            breaks: true,\r\n        });\r\n\r\n        const output = DOMPurify.sanitize(marked(props.mdText));\r\n        //console.log('output: ', output);\r\n        return (\r\n            <div \r\n                id='preview' \r\n                dangerouslySetInnerHTML= {{__html: output}}\r\n            />\r\n        );\r\n    }\r\n\r\n    console.log('(article card) article:', article);\r\n\r\n    return ( // 해당 제목에 해당하는 게시글 보여줌 \r\n        <div>\r\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n                <Card \r\n                    key={+article.createdAt}\r\n                    title={article.title} \r\n                    bordered={false} \r\n                >\r\n                    <Card.Meta\r\n                        avatar={(\r\n                            <Link href={{ pathname: '/user', query: { id: article.User.id } }} as={`/user/${article.User.id}`}>\r\n                                <a><Avatar>{article.User.nickname[0]}</Avatar></a>\r\n                            </Link>\r\n                        )}\r\n                        title={article.User.nickname}\r\n                        description={(\r\n                            <div>\r\n                                <div>\r\n                                    <PreviewPanel mdText={article.content}/>\r\n                                </div>\r\n\r\n                                {article.content.split(/(#[^\\s]+)/g).map((v) => {\r\n                                    // 해시태그인 애들은 Link로 감싸준다 \r\n                                    if (v.match(/(#[\\S]+)/)) { // ex) #사과<li>\r\n                                        //console.log(v.split('<')[0].slice(1));\r\n                                        return (\r\n                                            <Link href={{ pathname: '/hashtag', query: { tag: v.split('<')[0].slice(1) } }} as={`/hashtag/${v.split('<')[0].slice(1)}`} key={v}>\r\n                                                <a style={{ color: '#3f729b' }}>#{v.split('<')[0].slice(1)} </a>\r\n                                            </Link>\r\n                                        );\r\n                                    }\r\n                                    //return v; // 해시태그 아닌애들은 그냥 문자열 리턴 \r\n                                })}\r\n\r\n                            </div>\r\n                        )}\r\n                    >\r\n                    </Card.Meta>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nArticleCard.propTypes = {\r\n    article: PropTypes.shape({ // shape: 객체 상태 \r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n    }),\r\n};\r\n\r\nexport default ArticleCard;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/ympark4/Documents/GitHub/ls-tech/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ympark4\\\\Documents\\\\GitHub\\\\ls-tech\\\\front\\\\pages\\\\article.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Card } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../components/PostCard';\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\n\nvar Article = function Article(_ref) {\n  _s();\n\n  var id = _ref.id;\n  // getInitialProps로부터 전달받은 props \n  //console.log(id);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      article = _useSelector.article;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_ARTICLE_REQUEST,\n      data: id\n    });\n  }, []);\n  console.log('article: ', article);\n  return (\n    /*#__PURE__*/\n    // 해당 제목에 해당하는 게시글 보여줌 \n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: '#ECECEC',\n          padding: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: article.title,\n          bordered: false,\n          style: {\n            width: 300\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Card content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Card content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Card content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, _this)\n  );\n};\n\n_s(Article, \"XqGvSrpm9EaivVoZYDmhvGEMH9A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Article;\nArticle.propTypes = {\n  id: PropTypes.number.isRequired\n};\n\nArticle.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('article getInitialProps', context.query.id);\n            return _context.abrupt(\"return\", {\n              id: context.query.id\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["C:/Users/ympark4/Documents/GitHub/ls-tech/front/pages/article.js"],"names":["React","useEffect","Card","PropTypes","useDispatch","useSelector","PostCard","LOAD_ARTICLE_REQUEST","Article","id","dispatch","state","post","article","type","data","console","log","background","padding","title","width","propTypes","number","isRequired","getInitialProps","context","query"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,oBAAT,QAAqC,kBAArC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAY;AAAA;;AAAA,MAATC,EAAS,QAATA,EAAS;AAAE;AAC5B;AACA,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAF0B,qBAGNC,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHL;AAAA,MAGlBC,OAHkB,gBAGlBA,OAHkB;;AAK1BZ,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEP,oBADC;AAEPQ,MAAAA,IAAI,EAAEN;AAFC,KAAD,CAAR;AAID,GALQ,EAKN,EALM,CAAT;AAOAO,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,OAAzB;AAEA;AAAA;AAAS;AACP;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,UAAU,EAAE,SAAd;AAAyBC,UAAAA,OAAO,EAAE;AAAlC,SAAZ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,OAAO,CAACO,KAArB;AAA4B,UAAA,QAAQ,EAAE,KAAtC;AAA6C,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAApD;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAWD,CAzBD;;GAAMb,O;UAEaJ,W,EACGC,W;;;KAHhBG,O;AA2BNA,OAAO,CAACc,SAAR,GAAoB;AAChBb,EAAAA,EAAE,EAAEN,SAAS,CAACoB,MAAV,CAAiBC;AADL,CAApB;;AAIAhB,OAAO,CAACiB,eAAR;AAAA,uEAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACxBV,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCS,OAAO,CAACC,KAAR,CAAclB,EAArD;AADwB,6CAEjB;AAAEA,cAAAA,EAAE,EAAEiB,OAAO,CAACC,KAAR,CAAclB;AAApB,aAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeD,OAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { Card } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_ARTICLE_REQUEST } from '../reducers/post';\r\n\r\nconst Article = ({ id }) => { // getInitialProps로부터 전달받은 props \r\n  //console.log(id);\r\n  const dispatch = useDispatch();\r\n  const { article } = useSelector(state => state.post);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: LOAD_ARTICLE_REQUEST,\r\n      data: id,\r\n    });\r\n  }, []);\r\n\r\n  console.log('article: ', article);\r\n\r\n  return ( // 해당 제목에 해당하는 게시글 보여줌 \r\n    <div>\r\n        <div style={{ background: '#ECECEC', padding: '30px' }}>\r\n            <Card title={article.title} bordered={false} style={{ width: 300 }}>\r\n            <p>Card content</p>\r\n            <p>Card content</p>\r\n            <p>Card content</p>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nArticle.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\n\r\nArticle.getInitialProps = async (context) => {\r\n  console.log('article getInitialProps', context.query.id);\r\n  return { id: context.query.id }; // 서버로부터 받은 데이터 --> 프론트의 props로 전달 \r\n                                     // 현재 파일: 7번째 줄 ! \r\n};\r\n\r\nexport default Article;"]},"metadata":{},"sourceType":"module"}